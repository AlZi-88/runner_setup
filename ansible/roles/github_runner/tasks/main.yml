- name: Generate GitHub repo URL
  set_fact:
    github_repo_url: "https://github.com/AlZi-88/droneComPi-setup"

- name: Ensure required packages are installed
  apt:
    name: [curl, unzip, git, gh, nano, htop, net-tools, software-properties-common, python3-pip, python3-venv, ansible]
    state: present
    update_cache: yes
  become: yes

- name: Wait for GitHub CLI authentication on compi
  shell: |
    gh auth status --hostname github.com --show-token | grep "Token"
  register: gh_auth_status
  changed_when: false
  failed_when: false
  delegate_to: compi
  become: false
  become_user: compi
  retries: 12
  delay: 10
  until: gh_auth_status.rc == 0

- name: Create actions-runner directory
  file:
    path: /home/compi/actions-runner
    state: directory
    owner: compi
    group: compi
    mode: '0755'

- name: Download GitHub Actions Runner
  become_user: compi
  get_url:
    url: https://github.com/actions/runner/releases/download/v2.323.0/actions-runner-linux-arm64-2.323.0.tar.gz
    dest: /home/compi/actions-runner/actions-runner.tar.gz

- name: Extract Runner
  become_user: compi
  unarchive:
    src: /home/compi/actions-runner/actions-runner.tar.gz
    dest: /home/compi/actions-runner
    remote_src: yes

- name: Check if GitHub Actions runner is already configured
  stat:
    path: /home/compi/actions-runner/.runner
  register: runner_state

- name: Configure GitHub Actions Runner
  become_user: compi
  command: >
    ./config.sh 
    --url {{ github_repo_url }}
    --token {{ github_token }}
    --name compi
    --labels raspi, arm64,
    --unattended
    --replace
  args:
    chdir: /home/compi/actions-runner
  when: not runner_state.stat.exists

- name: Check if GitHub Runner systemd service file exists
  stat:
    path: /etc/systemd/system/actions.runner.AlZi-88-droneComPi-setup.compi.service
  register: runner_service_file

- name: Install GitHub Actions Runner as a service
  become: yes
  command: ./svc.sh install
  args:
    chdir: /home/compi/actions-runner
  when: not runner_service_file.stat.exists

- name: Check if GitHub Actions Runner service is active
  shell: |
    systemctl is-active actions.runner.AlZi-88-droneComPi-setup.compi.service || true
  register: runner_service_active
  changed_when: false

- name: Start GitHub Actions Runner service
  become: yes
  command: ./svc.sh start
  args:
    chdir: /home/compi/actions-runner
  when: runner_service_active.stdout != "active"

- name: Show target_ip before setting GitHub secret
  debug:
    msg: "Target IP is {{ target_ip }}"

- name: Write TARGET PI IP as GitHub Actions Secret
  shell: |
      gh secret set TARGET_PI_IP -b"{{ target_ip }}" -R {{ github_repo_url }}
  delegate_to: compi
  become: false
  become_user: compi
  when: github_repo_url is defined and target_ip != ""

- name: Write drone user password as GitHub Actions Secret
  shell: |
      gh secret set DRONE_USER_PASSWORD -b"{{ target_pass }}" -R {{ github_repo_url }}
  delegate_to: compi
  become: false
  become_user: compi
  when: github_repo_url is defined and target_pass != ""

- name: Write runner user password as GitHub Actions Secret
  shell: |
      gh secret set RUNNER_USER_PASSWORD -b"{{ runner_password }}" -R {{ github_repo_url }}
  delegate_to: compi
  become: false
  become_user: compi
  when: github_repo_url is defined and runner_password != ""